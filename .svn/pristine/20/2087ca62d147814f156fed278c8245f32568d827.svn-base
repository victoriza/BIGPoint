package net.bigpoint.assessment.gasstation.test;

import java.util.concurrent.TimeUnit;

import net.bigpoint.assessment.gasstation.GasPump;
import net.bigpoint.assessment.gasstation.GasType;
import net.bigpoint.assessment.gasstation.exceptions.NotEnoughGasException;
import net.bigpoint.assessment.gasstation.impl.GasStationImpl;

public class TestGasPumpStack extends TestGasStationBase {

	public void setUp() throws java.lang.Exception{
		
		gasStation = new GasStationImpl();

		//prices
		gasStation.setPrice(GasType.DIESEL, DIESEL_PRICE);
		gasStation.setPrice(GasType.REGULAR, REGULAR_PRICE);
		gasStation.setPrice(GasType.SUPER, SUPER_PRICE);

		
		for (int i = 0; i < 10; i++) {
			GasPump gasPumpD = new GasPump(GasType.DIESEL, DIESEL_AMOUNT);
			gasStation.addGasPump(gasPumpD);
		}
	}
	
	public void testGasPumpStack() throws NotEnoughGasException, InterruptedException {
		for (int i = 0; i < 10; i++) {
			clientExecutor.execute(new GasClient(i, GasType.DIESEL , 10 + i , DIESEL_PRICE));
		}
		
		clientExecutor.awaitTermination(10, TimeUnit.SECONDS);
		
		LOGGER.info("Station"+gasStation.toString());
		assertEquals(gasStation.getNumberOfSales(), 10);
	}


}
